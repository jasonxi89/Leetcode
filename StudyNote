#This is a study note for what i already done
597. 具有最大平均数的子树
中文English
给一棵二叉树，找到有最大平均值的子树。返回子树的根结点。

样例
给一个二叉树：

     1
   /   \
 -5     11
 / \   /  \
1   2 4    -2
返回节点 11。

注意事项
LintCode会打印出根结点为你返回节点的子树，保证有最大平均数子树只有一棵

声明个全局变量MAX？然后开始遍历？好像也不对，如何判断是不是该舍弃该值？比如说如果左节点是5，平均值是10，那左节点应该舍弃，难道要遍历一遍全部的组合么？
不对，题目要求是子树，那么说起来不是路径，可以考虑从头开始排着算？return返回count和sum,一个计算走了多少个Node，一个计算sum,self一个全局记录最大值

开始想说做个stack一个一个往外pop,但是最后事实发现根本不需要这种东西，直接返回SUM和数量就行，思路是对的，主要是出在遍历的问题上，还需要多联系


474. 最近公共祖先 II
中文English
给一棵二叉树和二叉树中的两个节点，找到这两个节点的最近公共祖先LCA。

两个节点的最近公共祖先，是指两个节点的所有父亲节点中（包括这两个节点），离这两个节点最近的公共的节点。

每个节点除了左右儿子指针以外，还包含一个父亲指针parent，指向自己的父亲。

样例
例1：

输入：
       4
      / \
     3  7
        / \
       5  6
和3,5
产量：4
说明：LCA（3,5）= 4

例2：

输入：
       4
      / \
     3  7
        / \
       5  6
和5,6
输出：7
说明：LCA（5,6）= 7


LCA问题，返回是不是找到A和B，好像天天做系列（LintCode578）
思路：直接递归，如果root是A或者是B或者是空，直接返回ROOT，然后递归左右，看看值是空还是什么，如果左右都不是空，那就意味着找到了当前值，直接返回ROOT
